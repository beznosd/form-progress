{"version":3,"sources":["src/form-progress.js"],"names":["formProgress","settings","form","inputTypes","formElements","progress","proggressAttr","proggressStyleProperty","initialValue","maxValue","units","additionalElementsToTrack","formSelector","progressSelector","document","querySelector","console","error","map","item","toLowerCase","changeableAdditinalElments","inputtableAdditinalElments","forEach","selector","elements","querySelectorAll","type","concat","formLength","formElement","length","element","progressStep","currentProgress","indexOf","addEventListener","evt","input","target","tagName","value","progressChecked","increaseProgress","decreaseProgress","checked","window"],"mappings":"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","file":"dist/form-progress.js","sourcesContent":[";(function() {\n  const formProgress = (settings = {}) => {\n    let { \n      form,\n      inputTypes,\n      formElements,\n      progress, \n      proggressAttr,\n      proggressStyleProperty,\n      initialValue,\n      maxValue,\n      units,\n      additionalElementsToTrack\n    } = settings;\n\n    /*\n    *  initializing of all values\n    */\n\n    const formSelector = form || '#progress-form';\n    const progressSelector = progress || '#progress-element';\n    proggressAttr = proggressAttr || 'style';\n    proggressStyleProperty = proggressStyleProperty || 'width';\n    initialValue = +initialValue || 0;\n    maxValue = +maxValue || 100;\n    units = units || '%';\n\n    form = document.querySelector(formSelector);\n    progress = document.querySelector(progressSelector);\n\n    if (!form) {\n      console.error(`Can\\'t get the form element by selector: ${formSelector}`);\n      return;\n    }\n\n    if (!progress) {\n      console.error(`Can\\'t get the progress element by selector: ${progressSelector}`);\n      return;\n    }\n\n    if (!inputTypes) {\n      inputTypes = [\n        'text', 'email', 'password', 'number', 'color', \n        'date', 'datetime', 'month', 'time', 'week', \n        'tel', 'search', 'url', 'range'\n      ];\n    } else {\n      // make all input types lowercase\n      inputTypes = inputTypes.map(item => item.toLowerCase());\n    }\n\n    if (!formElements) {\n      formElements = ['input', 'textarea', 'select'];\n    } else {\n      // make all input types lowercase\n      formElements = formElements.map(item => item.toLowerCase());\n    }\n  \n    // handle aditional elements and separate them to changeable and inputtable\n    let changeableAdditinalElments = [];\n    let inputtableAdditinalElments = [];\n    if (additionalElementsToTrack) {\n      additionalElementsToTrack.forEach((selector) => {\n        const elements = form.querySelectorAll(selector);\n        if (elements[0].type === 'checkbox') {\n          changeableAdditinalElments = changeableAdditinalElments.concat(...elements);\n        } else {\n          inputtableAdditinalElments = inputtableAdditinalElments.concat(...elements);\n        }\n      });\n    }\n\n    /*\n    *  calculating the initial values \n    */\n\n    // find the count of all elements and inputs which we need to track\n    // console.log( form.querySelectorAll('textarea').length );\n    let formLength = 0;\n    formElements.forEach((formElement) => {\n      if (formElement === 'input') {\n        inputTypes.forEach((item) => {\n          formLength += form.querySelectorAll(`input[type=\"${item}\"]`).length;\n        });\n      } else {\n        formLength += form.querySelectorAll(formElement).length;\n      }\n    });\n    if (additionalElementsToTrack) {\n      additionalElementsToTrack.forEach((element) => {\n        formLength += form.querySelectorAll(element).length;\n      });\n    }\n\n    const progressStep = (maxValue - initialValue) / formLength;\n    let currentProgress = initialValue;\n\n    progress[proggressAttr][proggressStyleProperty] = currentProgress + units;\n\n    /*\n    * handling the form events\n    */\n    \n    // adding listener for text format inputs\n    if (formElements.indexOf('input') > -1 || formElements.indexOf('textarea') > -1) {\n      form.addEventListener('input', (evt) => {\n        let input = null;\n        if (evt.target.tagName === 'TEXTAREA' || inputTypes.indexOf(evt.target.type) > -1) {\n          input = evt.target;\n        }\n        if (!input) return;\n        \n        // increase progress\n        if (input.value.length !== 0 && !input.progressChecked) {\n          increaseProgress();\n          input.progressChecked = true;\n        }\n\n        // decrease progress\n        if (input.value.length === 0 && input.progressChecked) {\n          decreaseProgress();\n          input.progressChecked = false;\n        }\n      }); // end text format inputs\n\n      // adding support for checkbox and radio\n      // preventing attaching event if we have not checkboxes and changeableAdditinalElments \n      if (formElements.indexOf('input') > -1 \n        && (inputTypes.indexOf('checkbox') > -1 || changeableAdditinalElments.length)) {\n        form.addEventListener('change', (evt) => {\n          let input = null;\n          // handle checkboxex\n          if (inputTypes.indexOf('checkbox') > -1 && evt.target.type === 'checkbox') {\n            input = evt.target;\n          }\n          // handle aditional elements checkboxes\n          if (changeableAdditinalElments.indexOf(evt.target) > -1) {\n            input = evt.target;\n          }\n          \n          if (!input) return;\n\n          // increase progress\n          if (input.checked && !input.progressChecked) {\n            increaseProgress();\n            input.progressChecked = true;\n          }\n\n          // decrease progress\n          if (!input.checked && input.progressChecked) {\n            decreaseProgress();\n            input.progressChecked = false;\n          }\n          // console.log(evt.target);\n        });\n      }\n    } // end form elements check\n\n    function increaseProgress() {\n      currentProgress += progressStep;\n      progress[proggressAttr][proggressStyleProperty] = currentProgress + units;              \n    }\n\n    function decreaseProgress() {\n      currentProgress -= progressStep;\n      progress[proggressAttr][proggressStyleProperty] = currentProgress + units;              \n    }\n  }; // end formProgress\n\n\n  window.formProgress = formProgress;\n}());"]}