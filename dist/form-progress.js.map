{"version":3,"sources":["src/form-progress.js"],"names":["formProgress","settings","form","inputTypes","formElements","progress","proggressAttr","proggressStyleProperty","initialValue","maxValue","units","formSelector","progressSelector","document","querySelector","console","error","map","item","toLowerCase","formLength","forEach","formElement","querySelectorAll","length","log","progressStep","currentProgress","indexOf","addEventListener","evt","input","target","tagName","type","value","progressChecked","window"],"mappings":"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","file":"dist/form-progress.js","sourcesContent":[";(function() {\n  const formProgress = (settings = {}) => {\n    let { \n      form,\n      inputTypes,\n      formElements,\n      progress, \n      proggressAttr,\n      proggressStyleProperty,\n      initialValue,\n      maxValue,\n      units,\n    } = settings;\n\n    /*\n    *  initializing of all values\n    */\n\n    const formSelector = form || '#progress-form';\n    const progressSelector = progress || '#progress-element';\n    proggressAttr = proggressAttr || 'style';\n    proggressStyleProperty = proggressStyleProperty || 'width';\n    initialValue = +initialValue || 0;\n    maxValue = +maxValue || 100;\n    units = units || '%';\n\n    form = document.querySelector(formSelector);\n    progress = document.querySelector(progressSelector);\n\n    if (!form) {\n      console.error(`Can\\'t get the form element by selector: ${formSelector}`);\n      return;\n    }\n\n    if (!progress) {\n      console.error(`Can\\'t get the progress element by selector: ${progressSelector}`);\n      return;\n    }\n\n    if (!inputTypes) {\n      inputTypes = [\n        'text', 'email', 'password', 'number', 'color', \n        'date', 'datetime', 'month', 'time', 'week', \n        'tel', 'search', 'url', 'range'\n      ];\n    } else {\n      // make all input types lowercase\n      inputTypes = inputTypes.map(item => item.toLowerCase());\n    }\n\n    if (!formElements) {\n      formElements = ['input', 'textarea', 'select'];\n    } else {\n      // make all input types lowercase\n      formElements = formElements.map(item => item.toLowerCase());\n    }\n\n    /*\n    *  calculating the initial values \n    */\n\n    // find the count of all elements and inputs which we need to track\n    // console.log( form.querySelectorAll('textarea').length );\n    let formLength = 0;\n    formElements.forEach((formElement) => {\n      if (formElement === 'input') {\n        inputTypes.forEach((item) => {\n          formLength += form.querySelectorAll(`input[type=\"${item}\"]`).length;\n        });\n      } else {\n        formLength += form.querySelectorAll(formElement).length;\n      }\n    });\n\n    console.log(formLength);\n    const progressStep = (maxValue - initialValue) / formLength;\n    let currentProgress = initialValue;\n\n    progress[proggressAttr][proggressStyleProperty] = currentProgress + units;\n\n    /*\n    * handling the form events\n    */\n    \n    // adding listener for text format inputs\n    if (formElements.indexOf('input') !== -1 || formElements.indexOf('textarea') !== -1) {\n      form.addEventListener('input', (evt) => {\n        let input = null;\n        if (evt.target.tagName === 'TEXTAREA' || inputTypes.indexOf(evt.target.type) !== -1) {\n          input = evt.target;\n        }    \n        if (!input) return;\n        \n        // increase progress\n        if (input.value.length !== 0 && !input.progressChecked) {\n          currentProgress += progressStep;\n\n          progress[proggressAttr][proggressStyleProperty] = currentProgress + units;              \n\n          input.progressChecked = true;\n        }\n\n        // decrease progress\n        if (input.value.length === 0 && input.progressChecked) {\n          currentProgress -= progressStep;\n\n          progress[proggressAttr][proggressStyleProperty] = currentProgress + units;              \n\n          input.progressChecked = false;\n        }\n      }); // end form.addEventListener for input\n    } // end form elements check\n  }; // end formProgress\n\n  window.formProgress = formProgress;\n}());"]}