{"version":3,"sources":["src/form-progress.js"],"names":["formProgress","settings","form","progressEl","proggressAttr","proggressStyleProperty","initialValue","maxValue","minValie","unit","valueContainer","inputTypes","progressStep","length","currentProgress","map","type","toString","toLowerCase","addEventListener","evt","input","target","value","progressChecked","style","width","window"],"mappings":";;AAAA,CAAE,aAAW;AACX,MAAMA,eAAe,SAAfA,YAAe,CAACC,QAAD,EAAc;AAAA,QAE/BC,IAF+B,GAW7BD,QAX6B,CAE/BC,IAF+B;AAAA,QAG/BC,UAH+B,GAW7BF,QAX6B,CAG/BE,UAH+B;AAAA,QAI/BC,aAJ+B,GAW7BH,QAX6B,CAI/BG,aAJ+B;AAAA,QAK/BC,sBAL+B,GAW7BJ,QAX6B,CAK/BI,sBAL+B;AAAA,QAM/BC,YAN+B,GAW7BL,QAX6B,CAM/BK,YAN+B;AAAA,QAO/BC,QAP+B,GAW7BN,QAX6B,CAO/BM,QAP+B;AAAA,QAQ/BC,QAR+B,GAW7BP,QAX6B,CAQ/BO,QAR+B;AAAA,QAS/BC,IAT+B,GAW7BR,QAX6B,CAS/BQ,IAT+B;AAAA,QAU/BC,cAV+B,GAW7BT,QAX6B,CAU/BS,cAV+B;;;AAajCR,WAAOA,QAAQ,gBAAf;AACAC,iBAAaA,cAAc,mBAA3B;AACAC,oBAAgBA,iBAAiB,OAAjC;AACAC,6BAAyBA,0BAA0B,OAAnD;AACAC,mBAAeA,gBAAgB,CAA/B;AACAC,eAAWA,YAAY,GAAvB;AACAC,eAAWA,YAAY,CAAvB;AACAC,WAAOA,QAAQ,GAAf;AACAC,qBAAiBA,kBAAkB,IAAnC;;AArBiC,QAuB3BC,UAvB2B,GAuBZV,QAvBY,CAuB3BU,UAvB2B;;;AAyBjC,QAAMC,eAAe,OAAOV,KAAKW,MAAL,GAAc,CAArB,CAArB;AACA,QAAIC,kBAAkB,CAAtB;;AAEA;AACAH,iBAAaA,WAAWI,GAAX,CAAe,UAACC,IAAD,EAAU;AACpC,aAAOA,KAAKC,QAAL,GAAgBC,WAAhB,EAAP;AACD,KAFY,CAAb;;AAIAhB,SAAKiB,gBAAL,CAAsB,OAAtB,EAA+B,UAACC,GAAD,EAAS;AACtC,UAAMC,QAAQD,IAAIE,MAAlB;;AAEA;AACA,UAAID,MAAME,KAAN,CAAYV,MAAZ,KAAuB,CAAvB,IAA4B,CAACQ,MAAMG,eAAvC,EAAwD;AACtDV,2BAAmBF,YAAnB;;AAEA,YAAIR,kBAAkB,OAAtB,EAA+B;AAC7BD,qBAAWsB,KAAX,CAAiBC,KAAjB,GAAyBZ,kBAAkBL,IAA3C;AACD;;AAEDY,cAAMG,eAAN,GAAwB,IAAxB;AACD;;AAED;AACA,UAAIH,MAAME,KAAN,CAAYV,MAAZ,KAAuB,CAAvB,IAA4BQ,MAAMG,eAAtC,EAAuD;AACrDV,2BAAmBF,YAAnB;;AAEA,YAAIR,kBAAkB,OAAtB,EAA+B;AAC7BD,qBAAWsB,KAAX,CAAiBC,KAAjB,GAAyBZ,kBAAkBL,IAA3C;AACD;;AAEDY,cAAMG,eAAN,GAAwB,KAAxB;AACD;AACF,KAxBD;AAyBD,GA1DD;;AA4DAG,SAAO3B,YAAP,GAAsBA,YAAtB;AACD,CA9DC,GAAD","file":"dist/form-progress.js","sourcesContent":[";(function() {\n  const formProgress = (settings) => {\n    let { \n      form,\n      progressEl, \n      proggressAttr,\n      proggressStyleProperty,\n      initialValue,\n      maxValue,\n      minValie,\n      unit,\n      valueContainer\n    } = settings;\n\n    form = form || '#progress-form';\n    progressEl = progressEl || '#progress-element';\n    proggressAttr = proggressAttr || 'style';\n    proggressStyleProperty = proggressStyleProperty || 'width';\n    initialValue = initialValue || 0;\n    maxValue = maxValue || 100;\n    minValie = minValie || 0;\n    unit = unit || '%';\n    valueContainer = valueContainer || null;\n\n    let { inputTypes } = settings;\n\n    const progressStep = 100 / (form.length - 1);\n    let currentProgress = 0;\n\n    // make all input types lowercase\n    inputTypes = inputTypes.map((type) => {\n      return type.toString().toLowerCase();\n    });\n\n    form.addEventListener('input', (evt) => {\n      const input = evt.target;\n\n      // increase progress\n      if (input.value.length !== 0 && !input.progressChecked) {\n        currentProgress += progressStep;\n\n        if (proggressAttr === 'style') {\n          progressEl.style.width = currentProgress + unit;              \n        }\n\n        input.progressChecked = true;\n      }\n\n      // decrease progress\n      if (input.value.length === 0 && input.progressChecked) {\n        currentProgress -= progressStep;\n\n        if (proggressAttr === 'style') {\n          progressEl.style.width = currentProgress + unit;              \n        }\n\n        input.progressChecked = false;\n      }\n    });\n  };\n\n  window.formProgress = formProgress;\n}());"]}